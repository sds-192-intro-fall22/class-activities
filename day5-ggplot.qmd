---
title: "Day 5: `ggplot()`"
format: html
editor: visual
---

```{r}
#Load the ggplot library here.
```

```{r}
pioneer_valley_2013 <- read.csv("https://raw.githubusercontent.com/SDS-192-Intro/sds-192-labs/main/Day7-GrammarGraphics/datasets/pioneer_valley_census_2013.csv", skip = 2)
pioneer_valley_2013_dictionary <- read.csv("https://raw.githubusercontent.com/SDS-192-Intro/sds-192-labs/main/Day7-GrammarGraphics/datasets/pioneer_valley_census_2013_dictionary.csv")
```

1.  Check column names and values.

```{r}
#Check the column names for pioneer_valley_2013. View what column names refer to via pioneer_valley_2013_dictionary
```

2.  Recreate this image using the `ggplot()` function. (Full size image in your images folder)

![](images/plot1.png)

```{r, fig.height=5, fig.width=10}
# Recreate Plot Here
```

> Question for Reflection: Note how in this plot, the x and y axis don't start at 0. Why might it be ok here vs. in other kinds of plots? Feel free to share your thoughts in `#sds-192-discussions`.

3.  Recreate this image using the `ggplot()` function. (Full size image in your images folder)

![](images/plot2.png)

```{r, fig.height=8, fig.width=8}
# Recreate Plot Here
```

4.  Recreate this image using the `ggplot()` function. (Full size image in your images folder)

![](images/plot3.png)

> Hint: We need the function scale_y\_continuous(), and the labels argument needs to be set to `scales::percent`. Check the help pages for this function to see how to format this!

```{r, fig.height=5, fig.width=8}
# Recreate Plot Here
```

5.  Which of the following does each point on this plot indicate?

-   A person
-   A municipality
-   A commute
-   A county
